<!DOCTYPE html>
<%- include('paheader') %>
<html>
<head>
    <style>
        /* Card container styling */
        .card-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            padding-right: 10%;
            padding-top:2%;
            
            /* align-content: right; */

        }
        
        .card-info {
            background-color: #fff;
            border-radius: 8px;
            border-style: solid;
            border-color: #807e7e;
            box-shadow: 10px 4px 8px rgba(96, 34, 34, 0.2);
            width: 90%; /* 3 cards per row */
            min-width: 300px;
            padding: 20px;
            text-align: left;
            transition: transform 0.3s ease-in-out;
            position: relative;
        }
        .card {
            background-color: #fff;
            border-radius: 8px;
            border-style: solid;
            border-color: #807e7e;
            box-shadow: 10px 4px 8px rgba(96, 34, 34, 0.2);
            width: calc(33.33% - 20px); /* 3 cards per row */
            min-width: 300px;
            padding: 20px;
            text-align: left;
            transition: transform 0.3s ease-in-out;
            margin-top: 20px;
            position: relative;
        }
        .card:hover {
            transform: translateY(-10px);
        }

        .card h2 {
            font-size: 24px;
            margin: 0 0 10px;
            color: #444;
            margin-top: 5px;
        }
        .card h3 {
            font-size: 16px;
            color: #222;
            margin-bottom: 10px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 5px;
        }
        .card p {
            margin: 8px 0;
            font-size: 14px;
            color: #555;
        }
        .card-section {
            margin-bottom: 15px;
        }
        .card-section h3 {
            font-size: 16px;
            color: #222;
            margin-bottom: 10px;
            border-bottom: 1px solid #ddd;
            padding-bottom: 5px;
        }
        .card-section p {
            margin: 4px 0;
        }
        .btn-container {
            display: flex;
            justify-content: space-around;
            margin-top: 15px;
        }
        button {
        display: flex;
        align-items: center;
        gap: 8px; /* Space between icon and text */
        padding: 10px 16px;
        font-size: 16px;
        font-weight: 500;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
        outline: none;
        
        }
        button i.material-icons {
        font-size: 20px;
        }
        .live-badge {
        display: inline-block;
        background-color: rgb(22, 167, 6);
        color: white;
        padding: 2px 6px;
        border-radius: 12px;
        font-size: 18px;
        font-weight: bold;
        width: 50px;
        height: 30px;
        align-content: center;
        }
        .inactive-badge {
        display: inline-block;
        background-color: rgb(91, 90, 90);
        color: white;
        padding: 2px 6px;
        border-radius: 12px;
        font-size: 18px;
        font-weight: bold;
        width: 55px;
        height: 30px;
        align-content: center;
        }
        .full-badge {
        display: inline-block;
        background-color: rgb(167, 6, 6);
        color: white;
        padding: 2px 6px;
        border-radius: 12px;
        font-size: 18px;
        font-weight: bold;
        width: 50px;
        height: 30px;
        align-content: center;

        }
        .attend-badge {
        display: inline-block;
        background-color: rgb(167, 164, 6);
        color: white;
        padding: 2px 6px;
        border-radius: 12px;
        font-size: 18px;
        font-weight: bold;
        width: 100px;
        height: 30px;
        align-content: center;
        }
        .timing-info {
        display: flex;
        justify-content: space-between; /* Spaces out the strong elements */
        align-items: center;
        margin: 8px 0;
    }
    .timing-separator {
        margin: 0 10px;
        font-weight: normal;
        color: #777;
    }
    /* Modal Styling */
    .modal {
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.6); /* Background overlay */
    }

    .modal-content {
        background-color: #fefefe;
        margin: 10% auto;
        padding: 30px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
        border-radius: 12px;
        box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.2);
        animation: slideDown 0.4s ease-out;
    }

    @keyframes slideDown {
        from { transform: translateY(-50px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

    .close:hover,
    .close:focus {
        color: #000;
        text-decoration: none;
    }
    .card-section ul {
    list-style-type: none;
    padding-left: 0;
}

.card-section li {
    font-size: 14px;
    color: #333;
    margin: 4px 0;
}
input[disabled] {
    background-color: #f5f5f5;
    cursor: not-allowed;
}

.full-badge {
    background-color: #d9534f;
    color: white;
    padding: 2px 6px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: bold;
    margin-left: 8px;
}


        /* Add media queries for smaller screens */
        @media screen and (max-width:720px) {
            .main-container {
                flex-direction: column;
                align-items: center;
            }

            .card-container {
                flex-direction: column;
                align-items: center;
            }

            .card {
                width: 80%;
            }
            .signup-btn {
                display: flex;
                align-items: center;
                gap: 8px; /* Space between icon and text */
                padding: 10px 16px;
                /* font-size: 16px; */
                /* font-weight: 500; */
                border: none;
                border-radius: 8px;
                cursor: pointer;
                transition: background-color 0.3s ease, transform 0.2s ease;
                outline: none;
                background-color: #00796b; /* Dark teal */
                color: #ffffff; /* White text */
                text-decoration: none; /* Removes underline */
            }

        }
    </style>
</head>
<body>

<!-- Main Content Section: Tabs and Cards side-by-side -->
<div class="main-content">   

    <h1>Add Events </h1>
    <br>
    <div class="card-info">
        <text> On this page, you can sign up for an event. The tags show if the event is live, full or if you are attending. 
            If you need more information, please click on the information button. If you need to cancel your registration, you can do so on the check hours page.</text>
    </div>
    <br>
        <h2> Upcoming Events</h2>
        <div class="card-container">
        <% events.forEach((row) => { %>
            <div class="card">
                
                <% if (signedUpEventIds.has(row._id.toString())) { %>
                        <span class="attend-badge">Attending</span>
                <% } else if( eventSignupCounts[row._id] === row.NumOfPAs) { %>
                    <span class="full-badge"> Full</span>
                <% } else if ( new Date(row.LiveTime) <= new Date()) { %>
                    <span class="live-badge">Live</span>
                <% } %>

                  <h2><%= row.EventName %></h2>
                  <h3><%= moment(row.DateStart).format('dddd, MMMM D, YYYY') %></h3>
                <!-- Time Details Section -->
                <div class="card-section">
                    <h3>Event Timing</h3>
                    <p class="timing-info">
                        <strong>Report Time:</strong> <%= moment(row.DateReportTime).format('h:mm A') %>
                        <span class="timing-separator">|</span>
                        <strong>Start Time:</strong> <%= moment(row.DateStart).format('h:mm A') %> 
                    </p>
                    <p class="timing-info">
                        <strong>End Time:</strong> <%= moment(row.DateEnd).format('h:mm A') %>
                        <span class="timing-separator">|</span>
                        <strong>Adjusted Time:</strong> <%= row.AdjustedTime %> min
                    </p>
                    
                    <!-- PA Details Section -->
                    <div class="card-section">
                        <h3>PA Information</h3>
                        <p><strong>Location:</strong> <%= row.Location %></p>
                        <p><strong>Credit Hours:</strong> <%= row.NumOfHours %> &nbsp;
                           <strong>Number of Spots: </strong> <%= eventSignupCounts[row._id] || 0 %> / <%= row.NumOfPAs %></p>
                    
                        <!-- <% if (row.BackUp > 0) { %>
                            <p><strong>Back up PAs: </strong> <%= eventRoleCounts[row._id]?.backupPA || 0 %> / <%= row.BackUp %></p>
                        <% } %> -->
                    
                        <% const roles = row.Roles || {}; %>
                        <% const hasAnyRoles = Object.values(roles).some(val => parseInt(val) > 0); %>
                    
                        <% if (hasAnyRoles) { %>
                            <p><strong>Roles Needed:</strong></p>
                            <ul>
                                <% if (parseInt(roles.golfCartDriver) > 0) { %>
                                    <li>Golf Cart Driver: <%= eventRoleCounts[row._id]?.golfCartDriver || 0 %> / <%= roles.golfCartDriver %></li>
                                <% } %>
                                <% if (parseInt(roles.leadPA) > 0) { %>
                                    <li>Lead PA: <%= eventRoleCounts[row._id]?.leadPA || 0 %> / <%= roles.leadPA %></li>
                                <% } %>
                                <% if (parseInt(roles.senior) > 0) { %>
                                    <li>Senior: <%= eventRoleCounts[row._id]?.senior || 0 %> / <%= roles.senior %></li>
                                <% } %>
                                <% if (parseInt(roles.junior) > 0) { %>
                                    <li>Junior: <%= eventRoleCounts[row._id]?.junior || 0 %> / <%= roles.junior %></li>
                                <% } %>
                                <% if (parseInt(roles.sophomore) > 0) { %>
                                    <li>Sophomore: <%= eventRoleCounts[row._id]?.sophomore || 0 %> / <%= roles.sophomore %></li>
                                <% } %>
                            </ul>
                        <% } %>
                    </div>
                    
    
                <!-- Buttons -->
                <div class="btn-container">
                    <a href='/paView/<%= row._id %>' class="Info-btn">
                        <i class="material-icons">info</i>
                    </a>
                        <% if (signedUpEventIds.has(row._id.toString())) { %>
                        <% } else if( eventSignupCounts[row._id] === row.NumOfPAs) { %>
                        <% } else if ( new Date(row.LiveTime) >= new Date()) { %>
                        
                        <% }else{ %>
                            <a href="#" 
                                class="addEventModal-btn" 
                                data-event-id="<%= row._id %>" 
                                data-spots="<%= row.NumOfPAs %>" 
                                data-roles='<%- JSON.stringify(row.Roles || {}) %>'
                                data-role-counts='<%- JSON.stringify(eventRoleCounts[row._id] || {}) %>'
                                data-backup='<%- JSON.stringify(row.backupPAs || []) %>'>
                                <i class="material-icons">event_available</i>
                            </a>

                        <% } %>
                </div>
            </div>
        </div>
        <% }) %>
    </div>
    <br><br><br>

    <h2> Previous Events</h2>
    <div class="card-info">
        <text> Below is events that have happened previously this semester. If you are trying to check your registration
            or get your hours approved, please go to the Check hours page.
        </text>
    </div>
    <div class="card-container">
        <% pastEvents.forEach((previous) => { %>
            <div class="card">

                  <h2><%= previous.EventName %></h2>
    
                <!-- Time Details Section -->
                <div class="card-section">
                    <h3>Event Timing</h3>
                    <p><strong>Report Time:</strong> <%= moment(previous.DateReportTime).format('dddd, MMMM D, YYYY - h:mm A') %></p>
                    <p><strong>Start Time:</strong> <%= moment(previous.DateStart).format('dddd, MMMM D, YYYY - h:mm A') %></p>
                    <p><strong>End Time:</strong> <%= moment(previous.DateEnd).format('dddd, MMMM D, YYYY - h:mm A') %></p>
                    <p><strong>Adjusted Time:</strong> <%= previous.AdjustedTime %> min</p>
                </div>
    
                <!-- PA Details Section -->
                <div class="card-section">
                    <h3>PA Information</h3>
                    <p><strong>Location:</strong> <%= previous.Location %></p>
                    <p><strong>Credit Hours:</strong> <%= previous.NumOfHours %> &nbsp; <strong>Number of Spots: </strong><%=// eventSignupCounts[row._id] || 0 %> / <%= previous.NumOfPAs %></p>
                    <% if (previous.BackUp > 0) { %> <strong>Back up PAs: </strong><%= 0 %> / <%= previous.BackUp %></p> <% } %>      
                    <% const roles = previous.Roles || {}; %>
                    <% const hasAnyRoles = Object.values(roles).some(val => parseInt(val) > 0); %>
    
                    <% if (hasAnyRoles) { %>
                    <p><strong>Roles:</strong></p>
                    <ul>
                        <% if (parseInt(roles.golfCartDriver) > 0) { %>
                        <p>Golf Cart Driver: <%= roles.golfCartDriver %></p>
                        <% } %>
                        <% if (parseInt(roles.leadPA) > 0) { %>
                        <p>Lead PA: <%= roles.leadPA %></p>
                        <% } %>
                        <% if (parseInt(roles.senior) > 0) { %>
                        <p>Senior: <%= roles.senior %></p>
                        <% } %>
                        <% if (parseInt(roles.junior) > 0) { %>
                        <p>Junior: <%= roles.junior %></p>
                        <% } %>
                        <% if (parseInt(roles.sophomore) > 0) { %>
                        <p>Sophomore: <%= roles.sophomore %></p>
                        <% } %>
                    </ul>
                    <% } %>
                </div>                
                

    
                <!-- Buttons -->
                <div class="btn-container">
                    <a href='/paView/<%= previous._id %>' class="Info-btn">
                        <i class="material-icons">info</i>
                    </a>
                </div>
            </div>
        <% }) %>
    </div>
</div>
</body>
</html>
<!-- Modal Structure -->
<div id="signupModal" class="modal">
    <div class="modal-content">
        <span class="close" id="modalClose">&times;</span>
        <h2>Confirm Signup</h2>
        <p>Are you sure you want to sign up for this event?</p>
        <form id="modalForm" method="POST" action="/paSignup">
            <div id="modalEventDetails">
                <p><strong>Available Spots:</strong> <span id="modalSpots"></span></p>
                <div id="modalRolesContainer">
                    <p><strong>Select a Role:</strong></p>
                    <div id="modalRolesCheckboxes"></div>
                </div>
            </div>
            <!-- Hidden input to include event ID -->
            <input type="hidden" name="eventId" id="modalEventId">
            <br>
            <button type="submit" class="signup-btn">Yes, Sign Me Up</button>
        </form>
    </div>
</div>

  
  
  <script>
    document.querySelectorAll('.addEventModal-btn').forEach(button => {
      button.addEventListener('click', function () {
        const eventId = this.dataset.eventId;
        const spots = this.dataset.spots;
        const roles = JSON.parse(this.dataset.roles || '{}'); // e.g., { "Golf Cart": 2, "Check-in": 1 }
        const filledCounts = JSON.parse(this.dataset.roleCounts || '{}'); // e.g., { "Golf Cart": 2 }
  
        // Fill modal data
        document.getElementById('modalEventId').value = eventId;
        document.getElementById('modalSpots').textContent = spots;
  
        const rolesContainer = document.getElementById('modalRolesCheckboxes');
        const rolesWrapper = document.getElementById('modalRolesContainer');
  
        rolesContainer.innerHTML = "";
        let hasRole = false;
  
        for (const [role, totalCount] of Object.entries(roles)) {
          const filled = filledCounts[role] || 0;
          const remaining = totalCount - filled;
          const disabled = remaining <= 0 ? 'disabled' : '';
  
          hasRole = true;
          const radioId = `role-${role.replace(/\s+/g, '-')}`;
  
          rolesContainer.innerHTML += `
            <label>
              <input type="radio" name="role" value="${role}" id="${radioId}" ${disabled}>
              ${role} (${remaining > 0 ? remaining + ' spot' + (remaining > 1 ? 's' : '') : 'Full'})
            </label><br>`;
        }
  
        rolesWrapper.style.display = hasRole ? 'block' : 'none';
        document.getElementById('signupModal').style.display = 'block';
      });
    });
  
    document.getElementById('modalClose').addEventListener('click', function () {
      document.getElementById('signupModal').style.display = 'none';
    });
  
    window.addEventListener('click', function (event) {
      if (event.target === document.getElementById('signupModal')) {
        document.getElementById('signupModal').style.display = 'none';
      }
    });
  </script>
  